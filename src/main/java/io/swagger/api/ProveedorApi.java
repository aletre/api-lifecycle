/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.12).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Proveedor;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-04-11T21:33:42.076Z")

@Api(value = "proveedor", description = "the proveedor API")
public interface ProveedorApi {

    @ApiOperation(value = "Actualiza un proveedor dado su id", nickname = "actualizarProveedor", notes = "Actualiza un proveedor dado su id", response = Object.class, tags={ "proveedores", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Proveedor actualizado correctamente", response = Object.class) })
    @RequestMapping(value = "/proveedor/{idProveedor}",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Object> actualizarProveedor(@ApiParam(value = "Proveedor buscado",required=true) @PathVariable("idProveedor") String idProveedor);


    @ApiOperation(value = "Agrega servicios al proveedor.", nickname = "adicionarServicioProveedor", notes = "Agrega servicios al proveedor.", tags={ "proveedores", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/proveedor/{idProveedor}/servicio/{idServicio}",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Void> adicionarServicioProveedor(@ApiParam(value = "Identificación del proveedor al que se le desea agregar el servicio.",required=true) @PathVariable("idProveedor") String idProveedor,@ApiParam(value = "Identificación del servicio que se desea agregar.",required=true) @PathVariable("idServicio") String idServicio);


    @ApiOperation(value = "Lista de proveedores disponibles", nickname = "buscarProveedor", notes = "proveedores disponibles para servicios de bodas", response = Proveedor.class, responseContainer = "List", tags={ "proveedores", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Operacion correcta", response = Proveedor.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "bad input parameter") })
    @RequestMapping(value = "/proveedor",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Proveedor>> buscarProveedor(@ApiParam(value = "id del proveedor que se desea buscar",required=true) @PathVariable("idProveedor") String idProveedor);


    @ApiOperation(value = "Lista de proveedores disponibles", nickname = "buscarProveedorPorId", notes = "proveedores disponibles para servicios", response = Proveedor.class, responseContainer = "List", tags={ "proveedores", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Operacion correcta", response = Proveedor.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "bad input parameter") })
    @RequestMapping(value = "/proveedor/{idProveedor}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Proveedor>> buscarProveedorPorId(@ApiParam(value = "id del proveedor que se desea buscar",required=true) @PathVariable("idProveedor") String idProveedor);


    @ApiOperation(value = "Obtiene la lista de servicios de un proveedor.", nickname = "buscarServicioProveedor", notes = "Lista de servicios de un proveedor.", tags={ "proveedores", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/proveedor/{idProveedor}/servicio",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Void> buscarServicioProveedor(@ApiParam(value = "Identificación del proveedor al cual se le desean listar sus servicios",required=true) @PathVariable("idProveedor") String idProveedor);


    @ApiOperation(value = "Adiciona un nuevo proveedor", nickname = "crearProveedor", notes = "Crea un nuevo proveedor", tags={ "proveedores", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/proveedor",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> crearProveedor(@ApiParam(value = "proveedor que se busca adicionar" ,required=true )  @Valid @RequestBody Proveedor proveedor);


    @ApiOperation(value = "Elimina un proveedor", nickname = "deleteProveedor", notes = "Elimina un proveedor", tags={ "proveedores", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Proveedor invalido"),
        @ApiResponse(code = 404, message = "Proveedor no encontrado") })
    @RequestMapping(value = "/proveedor/{idProveedor}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteProveedor(@ApiParam(value = "El Id del proveedor a eliminar",required=true) @PathVariable("idProveedor") String idProveedor);


    @ApiOperation(value = "Elimina un servicio de un paquete.", nickname = "deleteServicioDeProveedor", notes = "Elimina un servicio de un paquete.", tags={ "proveedores", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/proveedor/{idProveedor}/servicio/{idServicio}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteServicioDeProveedor(@ApiParam(value = "Identificación del proveedor al que se le desea agregar el servicio.",required=true) @PathVariable("idProveedor") String idProveedor,@ApiParam(value = "Identificación del servicio que se desea agregar.",required=true) @PathVariable("idServicio") String idServicio);

}
