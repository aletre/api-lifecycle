/**
 * NOTE: This class is auto generated by the swagger code generator program (1.0.12).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Paquete;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-04-11T21:33:42.076Z")

@Api(value = "paquetes", description = "the paquetes API")
public interface PaquetesApi {

    @ApiOperation(value = "actualizar propiedades de paquete", nickname = "actualizarPaquete", notes = "actualizar cualquier valor de un paquete", response = Object.class, tags={ "paquetes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "paquete actualizado correctamente", response = Object.class) })
    @RequestMapping(value = "/paquetes/{idPaquete}",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Object> actualizarPaquete(@ApiParam(value = "id del paquete a actualizar",required=true) @PathVariable("idPaquete") String idPaquete);


    @ApiOperation(value = "Agrega servicios al paquete.", nickname = "adicionarServicioEnPaquete", notes = "Agrega servicios al paquete.", tags={ "paquetes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/paquetes/{idPaquete}/servicio/{idServicio}",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Void> adicionarServicioEnPaquete(@ApiParam(value = "Identificación del paquete al que se le desea agregar el servicio.",required=true) @PathVariable("idPaquete") String idPaquete,@ApiParam(value = "Identificación del servicio que se desea agregar.",required=true) @PathVariable("idServicio") String idServicio);


    @ApiOperation(value = "paquetes de boda disponibles", nickname = "buscarPaquete", notes = "paquetes disponibles en venta", response = Paquete.class, responseContainer = "List", tags={ "paquetes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "paquetes encontrados por la búsqueda", response = Paquete.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "bad input parameter") })
    @RequestMapping(value = "/paquetes",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Paquete>> buscarPaquete(@ApiParam(value = "pass an optional search string for looking up inventory") @Valid @RequestParam(value = "searchString", required = false) String searchString);


    @ApiOperation(value = "paquetes de boda disponibles", nickname = "buscarPaquetePorId", notes = "paquetes disponibles en venta", response = Paquete.class, responseContainer = "List", tags={ "paquetes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "paquetes encontrados por la búsqueda", response = Paquete.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "bad input parameter") })
    @RequestMapping(value = "/paquetes/{idPaquete}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Paquete>> buscarPaquetePorId(@ApiParam(value = "pass an optional search string for looking up inventory",required=true) @PathVariable("idPaquete") String idPaquete);


    @ApiOperation(value = "Obtiene la lista de servicios de un paquete.", nickname = "buscarServicioPaquete", notes = "Lista de servicios de paquetes.", tags={ "paquetes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/paquetes/{idPaquete}/servicio",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Void> buscarServicioPaquete(@ApiParam(value = "Identificación del paquete al que se le desea agregar el servicio.",required=true) @PathVariable("idPaquete") String idPaquete);


    @ApiOperation(value = "Crea nuevos paquetes de boda", nickname = "crearPaquete", notes = "Crea nuevos paquetes de bodas", tags={ "paquetes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Paquete creado con éxito") })
    @RequestMapping(value = "/paquetes",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> crearPaquete(@ApiParam(value = "El paquete a crear"  )  @Valid @RequestBody Paquete paquete);


    @ApiOperation(value = "Borra un paquete", nickname = "deletePaquete", notes = "Elimina un paquete de bodas", tags={ "paquetes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "In incorrecto"),
        @ApiResponse(code = 404, message = "Paquete no encontrado.") })
    @RequestMapping(value = "/paquetes/{idPaquete}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deletePaquete(@ApiParam(value = "Id del paquete a eliminar",required=true) @PathVariable("idPaquete") Long idPaquete);


    @ApiOperation(value = "Elimina un servicio de un paquete.", nickname = "deleteServicioDePaquete", notes = "Elimina un servicio de un paquete.", tags={ "paquetes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK") })
    @RequestMapping(value = "/paquetes/{idPaquete}/servicio/{idServicio}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteServicioDePaquete(@ApiParam(value = "Identificación del paquete al que se le desea agregar el servicio.",required=true) @PathVariable("idPaquete") String idPaquete,@ApiParam(value = "Identificación del servicio que se desea agregar.",required=true) @PathVariable("idServicio") String idServicio);

}
